version: 1
applications:
  - appRoot: .
    frontend:
      phases:
        preBuild:
          commands:
            - echo "Installing pnpm..."
            - npm install -g pnpm@latest
            - echo "Installing dependencies..."
            - pnpm install --frozen-lockfile
            - echo "Setting up environment..."
            - export NODE_ENV=production
        build:
          commands:
            - echo "Building Next.js application..."
            - pnpm build
            - echo "Preparing Amplify deployment bundle..."
            - rm -rf amplify && mkdir -p amplify
            # Copy the entire standalone build (includes server.js, .next/, node_modules/, package.json)
            # Use bash to ensure hidden files (.next) are copied
            - shopt -s dotglob && cp -r .next/standalone/* amplify/ && shopt -u dotglob
            # Copy static files (standalone doesn't include .next/static)
            - cp -r .next/static amplify/.next/static
            # Copy public assets if not already in standalone
            - if [ -d public ] && [ ! -d amplify/public ]; then cp -r public amplify/public; fi
            # Copy required-server-files.json to root for Amplify
            - cp amplify/.next/required-server-files.json amplify/required-server-files.json
            - echo "Build completed successfully"
        postBuild:
          commands:
            - echo "Build completed successfully"
            - echo "Checking if database needs initialization..."
            # Attention: After the first deployment, you need to manually access the /seed endpoint to initialize the database
            # Or add an automation script here
      artifacts:
        baseDirectory: amplify
        files:
          - '**/*'
      cache:
        paths:
          - node_modules/**/*
          - .next/cache/**/*
          - .pnpm-store/**/*
    backend:
      phases:
        build:
          commands:
            - echo "No backend build required"
